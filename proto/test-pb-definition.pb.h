// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test-pb-definition.proto

#ifndef PROTOBUF_test_2dpb_2ddefinition_2eproto__INCLUDED
#define PROTOBUF_test_2dpb_2ddefinition_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace rubicon {
namespace data_pipeline {
namespace aggregation_framework {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_test_2dpb_2ddefinition_2eproto();
void protobuf_AssignDesc_test_2dpb_2ddefinition_2eproto();
void protobuf_ShutdownFile_test_2dpb_2ddefinition_2eproto();

class Audience_PB;
class BrowserOS_PB;
class AggregatorReports_PB;
class ReportsValue_PB;
class SimpleMessage_PB;

enum AggregatorReports_PB_AggregatorReportsCode_E {
  AggregatorReports_PB_AggregatorReportsCode_E_UNSET = 0,
  AggregatorReports_PB_AggregatorReportsCode_E_AUDIENCE = 1,
  AggregatorReports_PB_AggregatorReportsCode_E_BROWSER_OS = 2
};
bool AggregatorReports_PB_AggregatorReportsCode_E_IsValid(int value);
const AggregatorReports_PB_AggregatorReportsCode_E AggregatorReports_PB_AggregatorReportsCode_E_AggregatorReportsCode_E_MIN = AggregatorReports_PB_AggregatorReportsCode_E_UNSET;
const AggregatorReports_PB_AggregatorReportsCode_E AggregatorReports_PB_AggregatorReportsCode_E_AggregatorReportsCode_E_MAX = AggregatorReports_PB_AggregatorReportsCode_E_BROWSER_OS;
const int AggregatorReports_PB_AggregatorReportsCode_E_AggregatorReportsCode_E_ARRAYSIZE = AggregatorReports_PB_AggregatorReportsCode_E_AggregatorReportsCode_E_MAX + 1;

const ::google::protobuf::EnumDescriptor* AggregatorReports_PB_AggregatorReportsCode_E_descriptor();
inline const ::std::string& AggregatorReports_PB_AggregatorReportsCode_E_Name(AggregatorReports_PB_AggregatorReportsCode_E value) {
  return ::google::protobuf::internal::NameOfEnum(
    AggregatorReports_PB_AggregatorReportsCode_E_descriptor(), value);
}
inline bool AggregatorReports_PB_AggregatorReportsCode_E_Parse(
    const ::std::string& name, AggregatorReports_PB_AggregatorReportsCode_E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AggregatorReports_PB_AggregatorReportsCode_E>(
    AggregatorReports_PB_AggregatorReportsCode_E_descriptor(), name, value);
}
// ===================================================================

class Audience_PB : public ::google::protobuf::Message {
 public:
  Audience_PB();
  virtual ~Audience_PB();
  
  Audience_PB(const Audience_PB& from);
  
  inline Audience_PB& operator=(const Audience_PB& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Audience_PB& default_instance();
  
  void Swap(Audience_PB* other);
  
  // implements Message ----------------------------------------------
  
  Audience_PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Audience_PB& from);
  void MergeFrom(const Audience_PB& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 date = 1;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 1;
  inline ::google::protobuf::uint32 date() const;
  inline void set_date(::google::protobuf::uint32 value);
  
  // required uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // required uint32 site_id = 3;
  inline bool has_site_id() const;
  inline void clear_site_id();
  static const int kSiteIdFieldNumber = 3;
  inline ::google::protobuf::uint32 site_id() const;
  inline void set_site_id(::google::protobuf::uint32 value);
  
  // required uint32 size_id = 4;
  inline bool has_size_id() const;
  inline void clear_size_id();
  static const int kSizeIdFieldNumber = 4;
  inline ::google::protobuf::uint32 size_id() const;
  inline void set_size_id(::google::protobuf::uint32 value);
  
  // required uint32 country_id = 5;
  inline bool has_country_id() const;
  inline void clear_country_id();
  static const int kCountryIdFieldNumber = 5;
  inline ::google::protobuf::uint32 country_id() const;
  inline void set_country_id(::google::protobuf::uint32 value);
  
  // required uint32 behavior_id = 6;
  inline bool has_behavior_id() const;
  inline void clear_behavior_id();
  static const int kBehaviorIdFieldNumber = 6;
  inline ::google::protobuf::uint32 behavior_id() const;
  inline void set_behavior_id(::google::protobuf::uint32 value);
  
  // required uint32 gender_id = 7;
  inline bool has_gender_id() const;
  inline void clear_gender_id();
  static const int kGenderIdFieldNumber = 7;
  inline ::google::protobuf::uint32 gender_id() const;
  inline void set_gender_id(::google::protobuf::uint32 value);
  
  // required uint32 ethnicity_i = 8;
  inline bool has_ethnicity_i() const;
  inline void clear_ethnicity_i();
  static const int kEthnicityIFieldNumber = 8;
  inline ::google::protobuf::uint32 ethnicity_i() const;
  inline void set_ethnicity_i(::google::protobuf::uint32 value);
  
  // required uint32 income_id = 9;
  inline bool has_income_id() const;
  inline void clear_income_id();
  static const int kIncomeIdFieldNumber = 9;
  inline ::google::protobuf::uint32 income_id() const;
  inline void set_income_id(::google::protobuf::uint32 value);
  
  // required uint32 age_id = 10;
  inline bool has_age_id() const;
  inline void clear_age_id();
  static const int kAgeIdFieldNumber = 10;
  inline ::google::protobuf::uint32 age_id() const;
  inline void set_age_id(::google::protobuf::uint32 value);
  
  // required uint32 duplicate = 11;
  inline bool has_duplicate() const;
  inline void clear_duplicate();
  static const int kDuplicateFieldNumber = 11;
  inline ::google::protobuf::uint32 duplicate() const;
  inline void set_duplicate(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:rubicon.data_pipeline.aggregation_framework.Audience_PB)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_site_id();
  inline void clear_has_site_id();
  inline void set_has_size_id();
  inline void clear_has_size_id();
  inline void set_has_country_id();
  inline void clear_has_country_id();
  inline void set_has_behavior_id();
  inline void clear_has_behavior_id();
  inline void set_has_gender_id();
  inline void clear_has_gender_id();
  inline void set_has_ethnicity_i();
  inline void clear_has_ethnicity_i();
  inline void set_has_income_id();
  inline void clear_has_income_id();
  inline void set_has_age_id();
  inline void clear_has_age_id();
  inline void set_has_duplicate();
  inline void clear_has_duplicate();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 date_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 site_id_;
  ::google::protobuf::uint32 size_id_;
  ::google::protobuf::uint32 country_id_;
  ::google::protobuf::uint32 behavior_id_;
  ::google::protobuf::uint32 gender_id_;
  ::google::protobuf::uint32 ethnicity_i_;
  ::google::protobuf::uint32 income_id_;
  ::google::protobuf::uint32 age_id_;
  ::google::protobuf::uint32 duplicate_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void  protobuf_AddDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_AssignDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_ShutdownFile_test_2dpb_2ddefinition_2eproto();
  
  void InitAsDefaultInstance();
  static Audience_PB* default_instance_;
};
// -------------------------------------------------------------------

class BrowserOS_PB : public ::google::protobuf::Message {
 public:
  BrowserOS_PB();
  virtual ~BrowserOS_PB();
  
  BrowserOS_PB(const BrowserOS_PB& from);
  
  inline BrowserOS_PB& operator=(const BrowserOS_PB& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BrowserOS_PB& default_instance();
  
  void Swap(BrowserOS_PB* other);
  
  // implements Message ----------------------------------------------
  
  BrowserOS_PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BrowserOS_PB& from);
  void MergeFrom(const BrowserOS_PB& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 date = 1;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 1;
  inline ::google::protobuf::uint32 date() const;
  inline void set_date(::google::protobuf::uint32 value);
  
  // required uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // required uint32 site_id = 3;
  inline bool has_site_id() const;
  inline void clear_site_id();
  static const int kSiteIdFieldNumber = 3;
  inline ::google::protobuf::uint32 site_id() const;
  inline void set_site_id(::google::protobuf::uint32 value);
  
  // required uint32 size_id = 4;
  inline bool has_size_id() const;
  inline void clear_size_id();
  static const int kSizeIdFieldNumber = 4;
  inline ::google::protobuf::uint32 size_id() const;
  inline void set_size_id(::google::protobuf::uint32 value);
  
  // required uint32 ad_id = 5;
  inline bool has_ad_id() const;
  inline void clear_ad_id();
  static const int kAdIdFieldNumber = 5;
  inline ::google::protobuf::uint32 ad_id() const;
  inline void set_ad_id(::google::protobuf::uint32 value);
  
  // required uint32 creative_id = 6;
  inline bool has_creative_id() const;
  inline void clear_creative_id();
  static const int kCreativeIdFieldNumber = 6;
  inline ::google::protobuf::uint32 creative_id() const;
  inline void set_creative_id(::google::protobuf::uint32 value);
  
  // required uint32 campaign_id = 7;
  inline bool has_campaign_id() const;
  inline void clear_campaign_id();
  static const int kCampaignIdFieldNumber = 7;
  inline ::google::protobuf::uint32 campaign_id() const;
  inline void set_campaign_id(::google::protobuf::uint32 value);
  
  // required uint32 browser = 8;
  inline bool has_browser() const;
  inline void clear_browser();
  static const int kBrowserFieldNumber = 8;
  inline ::google::protobuf::uint32 browser() const;
  inline void set_browser(::google::protobuf::uint32 value);
  
  // required uint32 osystem = 9;
  inline bool has_osystem() const;
  inline void clear_osystem();
  static const int kOsystemFieldNumber = 9;
  inline ::google::protobuf::uint32 osystem() const;
  inline void set_osystem(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:rubicon.data_pipeline.aggregation_framework.BrowserOS_PB)
 private:
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_site_id();
  inline void clear_has_site_id();
  inline void set_has_size_id();
  inline void clear_has_size_id();
  inline void set_has_ad_id();
  inline void clear_has_ad_id();
  inline void set_has_creative_id();
  inline void clear_has_creative_id();
  inline void set_has_campaign_id();
  inline void clear_has_campaign_id();
  inline void set_has_browser();
  inline void clear_has_browser();
  inline void set_has_osystem();
  inline void clear_has_osystem();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 date_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 site_id_;
  ::google::protobuf::uint32 size_id_;
  ::google::protobuf::uint32 ad_id_;
  ::google::protobuf::uint32 creative_id_;
  ::google::protobuf::uint32 campaign_id_;
  ::google::protobuf::uint32 browser_;
  ::google::protobuf::uint32 osystem_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_AssignDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_ShutdownFile_test_2dpb_2ddefinition_2eproto();
  
  void InitAsDefaultInstance();
  static BrowserOS_PB* default_instance_;
};
// -------------------------------------------------------------------

class AggregatorReports_PB : public ::google::protobuf::Message {
 public:
  AggregatorReports_PB();
  virtual ~AggregatorReports_PB();
  
  AggregatorReports_PB(const AggregatorReports_PB& from);
  
  inline AggregatorReports_PB& operator=(const AggregatorReports_PB& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AggregatorReports_PB& default_instance();
  
  void Swap(AggregatorReports_PB* other);
  
  // implements Message ----------------------------------------------
  
  AggregatorReports_PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AggregatorReports_PB& from);
  void MergeFrom(const AggregatorReports_PB& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef AggregatorReports_PB_AggregatorReportsCode_E AggregatorReportsCode_E;
  static const AggregatorReportsCode_E UNSET = AggregatorReports_PB_AggregatorReportsCode_E_UNSET;
  static const AggregatorReportsCode_E AUDIENCE = AggregatorReports_PB_AggregatorReportsCode_E_AUDIENCE;
  static const AggregatorReportsCode_E BROWSER_OS = AggregatorReports_PB_AggregatorReportsCode_E_BROWSER_OS;
  static inline bool AggregatorReportsCode_E_IsValid(int value) {
    return AggregatorReports_PB_AggregatorReportsCode_E_IsValid(value);
  }
  static const AggregatorReportsCode_E AggregatorReportsCode_E_MIN =
    AggregatorReports_PB_AggregatorReportsCode_E_AggregatorReportsCode_E_MIN;
  static const AggregatorReportsCode_E AggregatorReportsCode_E_MAX =
    AggregatorReports_PB_AggregatorReportsCode_E_AggregatorReportsCode_E_MAX;
  static const int AggregatorReportsCode_E_ARRAYSIZE =
    AggregatorReports_PB_AggregatorReportsCode_E_AggregatorReportsCode_E_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AggregatorReportsCode_E_descriptor() {
    return AggregatorReports_PB_AggregatorReportsCode_E_descriptor();
  }
  static inline const ::std::string& AggregatorReportsCode_E_Name(AggregatorReportsCode_E value) {
    return AggregatorReports_PB_AggregatorReportsCode_E_Name(value);
  }
  static inline bool AggregatorReportsCode_E_Parse(const ::std::string& name,
      AggregatorReportsCode_E* value) {
    return AggregatorReports_PB_AggregatorReportsCode_E_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint32 account_id = 100;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 100;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // required .rubicon.data_pipeline.aggregation_framework.AggregatorReports_PB.AggregatorReportsCode_E report_type = 1 [default = UNSET];
  inline bool has_report_type() const;
  inline void clear_report_type();
  static const int kReportTypeFieldNumber = 1;
  inline ::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E report_type() const;
  inline void set_report_type(::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E value);
  
  // optional .rubicon.data_pipeline.aggregation_framework.Audience_PB audience = 2;
  inline bool has_audience() const;
  inline void clear_audience();
  static const int kAudienceFieldNumber = 2;
  inline const ::rubicon::data_pipeline::aggregation_framework::Audience_PB& audience() const;
  inline ::rubicon::data_pipeline::aggregation_framework::Audience_PB* mutable_audience();
  inline ::rubicon::data_pipeline::aggregation_framework::Audience_PB* release_audience();
  
  // optional .rubicon.data_pipeline.aggregation_framework.BrowserOS_PB browser_os = 3;
  inline bool has_browser_os() const;
  inline void clear_browser_os();
  static const int kBrowserOsFieldNumber = 3;
  inline const ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB& browser_os() const;
  inline ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB* mutable_browser_os();
  inline ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB* release_browser_os();
  
  // @@protoc_insertion_point(class_scope:rubicon.data_pipeline.aggregation_framework.AggregatorReports_PB)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_report_type();
  inline void clear_has_report_type();
  inline void set_has_audience();
  inline void clear_has_audience();
  inline void set_has_browser_os();
  inline void clear_has_browser_os();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_;
  int report_type_;
  ::rubicon::data_pipeline::aggregation_framework::Audience_PB* audience_;
  ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB* browser_os_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_AssignDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_ShutdownFile_test_2dpb_2ddefinition_2eproto();
  
  void InitAsDefaultInstance();
  static AggregatorReports_PB* default_instance_;
};
// -------------------------------------------------------------------

class ReportsValue_PB : public ::google::protobuf::Message {
 public:
  ReportsValue_PB();
  virtual ~ReportsValue_PB();
  
  ReportsValue_PB(const ReportsValue_PB& from);
  
  inline ReportsValue_PB& operator=(const ReportsValue_PB& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportsValue_PB& default_instance();
  
  void Swap(ReportsValue_PB* other);
  
  // implements Message ----------------------------------------------
  
  ReportsValue_PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportsValue_PB& from);
  void MergeFrom(const ReportsValue_PB& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 rubicon_imps = 1 [default = 0];
  inline bool has_rubicon_imps() const;
  inline void clear_rubicon_imps();
  static const int kRubiconImpsFieldNumber = 1;
  inline ::google::protobuf::uint32 rubicon_imps() const;
  inline void set_rubicon_imps(::google::protobuf::uint32 value);
  
  // optional uint32 defaults_in = 2 [default = 0];
  inline bool has_defaults_in() const;
  inline void clear_defaults_in();
  static const int kDefaultsInFieldNumber = 2;
  inline ::google::protobuf::uint32 defaults_in() const;
  inline void set_defaults_in(::google::protobuf::uint32 value);
  
  // optional uint32 defaults_out = 3 [default = 0];
  inline bool has_defaults_out() const;
  inline void clear_defaults_out();
  static const int kDefaultsOutFieldNumber = 3;
  inline ::google::protobuf::uint32 defaults_out() const;
  inline void set_defaults_out(::google::protobuf::uint32 value);
  
  // optional uint32 rubicon_clicks = 4 [default = 0];
  inline bool has_rubicon_clicks() const;
  inline void clear_rubicon_clicks();
  static const int kRubiconClicksFieldNumber = 4;
  inline ::google::protobuf::uint32 rubicon_clicks() const;
  inline void set_rubicon_clicks(::google::protobuf::uint32 value);
  
  // optional uint32 rubicon_actions = 5 [default = 0];
  inline bool has_rubicon_actions() const;
  inline void clear_rubicon_actions();
  static const int kRubiconActionsFieldNumber = 5;
  inline ::google::protobuf::uint32 rubicon_actions() const;
  inline void set_rubicon_actions(::google::protobuf::uint32 value);
  
  // optional double network_revenue = 6 [default = 0];
  inline bool has_network_revenue() const;
  inline void clear_network_revenue();
  static const int kNetworkRevenueFieldNumber = 6;
  inline double network_revenue() const;
  inline void set_network_revenue(double value);
  
  // optional uint32 network_clicks = 7 [default = 0];
  inline bool has_network_clicks() const;
  inline void clear_network_clicks();
  static const int kNetworkClicksFieldNumber = 7;
  inline ::google::protobuf::uint32 network_clicks() const;
  inline void set_network_clicks(::google::protobuf::uint32 value);
  
  // optional uint32 network_imps = 8 [default = 0];
  inline bool has_network_imps() const;
  inline void clear_network_imps();
  static const int kNetworkImpsFieldNumber = 8;
  inline ::google::protobuf::uint32 network_imps() const;
  inline void set_network_imps(::google::protobuf::uint32 value);
  
  // optional double tech_fee = 9 [default = 0];
  inline bool has_tech_fee() const;
  inline void clear_tech_fee();
  static const int kTechFeeFieldNumber = 9;
  inline double tech_fee() const;
  inline void set_tech_fee(double value);
  
  // optional uint64 score = 10 [default = 0];
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 10;
  inline ::google::protobuf::uint64 score() const;
  inline void set_score(::google::protobuf::uint64 value);
  
  // optional int64 weight = 11 [default = 0];
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 11;
  inline ::google::protobuf::int64 weight() const;
  inline void set_weight(::google::protobuf::int64 value);
  
  // optional int32 value = 12 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 12;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);
  
  // optional float weighted_score = 13 [default = 0];
  inline bool has_weighted_score() const;
  inline void clear_weighted_score();
  static const int kWeightedScoreFieldNumber = 13;
  inline float weighted_score() const;
  inline void set_weighted_score(float value);
  
  // optional uint32 finalized_date = 14;
  inline bool has_finalized_date() const;
  inline void clear_finalized_date();
  static const int kFinalizedDateFieldNumber = 14;
  inline ::google::protobuf::uint32 finalized_date() const;
  inline void set_finalized_date(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:rubicon.data_pipeline.aggregation_framework.ReportsValue_PB)
 private:
  inline void set_has_rubicon_imps();
  inline void clear_has_rubicon_imps();
  inline void set_has_defaults_in();
  inline void clear_has_defaults_in();
  inline void set_has_defaults_out();
  inline void clear_has_defaults_out();
  inline void set_has_rubicon_clicks();
  inline void clear_has_rubicon_clicks();
  inline void set_has_rubicon_actions();
  inline void clear_has_rubicon_actions();
  inline void set_has_network_revenue();
  inline void clear_has_network_revenue();
  inline void set_has_network_clicks();
  inline void clear_has_network_clicks();
  inline void set_has_network_imps();
  inline void clear_has_network_imps();
  inline void set_has_tech_fee();
  inline void clear_has_tech_fee();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_weighted_score();
  inline void clear_has_weighted_score();
  inline void set_has_finalized_date();
  inline void clear_has_finalized_date();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rubicon_imps_;
  ::google::protobuf::uint32 defaults_in_;
  ::google::protobuf::uint32 defaults_out_;
  ::google::protobuf::uint32 rubicon_clicks_;
  double network_revenue_;
  ::google::protobuf::uint32 rubicon_actions_;
  ::google::protobuf::uint32 network_clicks_;
  double tech_fee_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 network_imps_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int64 weight_;
  float weighted_score_;
  ::google::protobuf::uint32 finalized_date_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void  protobuf_AddDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_AssignDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_ShutdownFile_test_2dpb_2ddefinition_2eproto();
  
  void InitAsDefaultInstance();
  static ReportsValue_PB* default_instance_;
};
// -------------------------------------------------------------------

class SimpleMessage_PB : public ::google::protobuf::Message {
 public:
  SimpleMessage_PB();
  virtual ~SimpleMessage_PB();
  
  SimpleMessage_PB(const SimpleMessage_PB& from);
  
  inline SimpleMessage_PB& operator=(const SimpleMessage_PB& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SimpleMessage_PB& default_instance();
  
  void Swap(SimpleMessage_PB* other);
  
  // implements Message ----------------------------------------------
  
  SimpleMessage_PB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SimpleMessage_PB& from);
  void MergeFrom(const SimpleMessage_PB& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 emit_time = 1;
  inline bool has_emit_time() const;
  inline void clear_emit_time();
  static const int kEmitTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 emit_time() const;
  inline void set_emit_time(::google::protobuf::uint64 value);
  
  // required double tech_fee = 2;
  inline bool has_tech_fee() const;
  inline void clear_tech_fee();
  static const int kTechFeeFieldNumber = 2;
  inline double tech_fee() const;
  inline void set_tech_fee(double value);
  
  // optional double network_revenue = 3;
  inline bool has_network_revenue() const;
  inline void clear_network_revenue();
  static const int kNetworkRevenueFieldNumber = 3;
  inline double network_revenue() const;
  inline void set_network_revenue(double value);
  
  // @@protoc_insertion_point(class_scope:rubicon.data_pipeline.aggregation_framework.SimpleMessage_PB)
 private:
  inline void set_has_emit_time();
  inline void clear_has_emit_time();
  inline void set_has_tech_fee();
  inline void clear_has_tech_fee();
  inline void set_has_network_revenue();
  inline void clear_has_network_revenue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 emit_time_;
  double tech_fee_;
  double network_revenue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_AssignDesc_test_2dpb_2ddefinition_2eproto();
  friend void protobuf_ShutdownFile_test_2dpb_2ddefinition_2eproto();
  
  void InitAsDefaultInstance();
  static SimpleMessage_PB* default_instance_;
};
// ===================================================================


// ===================================================================

// Audience_PB

// required uint32 date = 1;
inline bool Audience_PB::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Audience_PB::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Audience_PB::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Audience_PB::clear_date() {
  date_ = 0u;
  clear_has_date();
}
inline ::google::protobuf::uint32 Audience_PB::date() const {
  return date_;
}
inline void Audience_PB::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
}

// required uint32 account_id = 2;
inline bool Audience_PB::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Audience_PB::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Audience_PB::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Audience_PB::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 Audience_PB::account_id() const {
  return account_id_;
}
inline void Audience_PB::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// required uint32 site_id = 3;
inline bool Audience_PB::has_site_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Audience_PB::set_has_site_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Audience_PB::clear_has_site_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Audience_PB::clear_site_id() {
  site_id_ = 0u;
  clear_has_site_id();
}
inline ::google::protobuf::uint32 Audience_PB::site_id() const {
  return site_id_;
}
inline void Audience_PB::set_site_id(::google::protobuf::uint32 value) {
  set_has_site_id();
  site_id_ = value;
}

// required uint32 size_id = 4;
inline bool Audience_PB::has_size_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Audience_PB::set_has_size_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Audience_PB::clear_has_size_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Audience_PB::clear_size_id() {
  size_id_ = 0u;
  clear_has_size_id();
}
inline ::google::protobuf::uint32 Audience_PB::size_id() const {
  return size_id_;
}
inline void Audience_PB::set_size_id(::google::protobuf::uint32 value) {
  set_has_size_id();
  size_id_ = value;
}

// required uint32 country_id = 5;
inline bool Audience_PB::has_country_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Audience_PB::set_has_country_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Audience_PB::clear_has_country_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Audience_PB::clear_country_id() {
  country_id_ = 0u;
  clear_has_country_id();
}
inline ::google::protobuf::uint32 Audience_PB::country_id() const {
  return country_id_;
}
inline void Audience_PB::set_country_id(::google::protobuf::uint32 value) {
  set_has_country_id();
  country_id_ = value;
}

// required uint32 behavior_id = 6;
inline bool Audience_PB::has_behavior_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Audience_PB::set_has_behavior_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Audience_PB::clear_has_behavior_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Audience_PB::clear_behavior_id() {
  behavior_id_ = 0u;
  clear_has_behavior_id();
}
inline ::google::protobuf::uint32 Audience_PB::behavior_id() const {
  return behavior_id_;
}
inline void Audience_PB::set_behavior_id(::google::protobuf::uint32 value) {
  set_has_behavior_id();
  behavior_id_ = value;
}

// required uint32 gender_id = 7;
inline bool Audience_PB::has_gender_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Audience_PB::set_has_gender_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Audience_PB::clear_has_gender_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Audience_PB::clear_gender_id() {
  gender_id_ = 0u;
  clear_has_gender_id();
}
inline ::google::protobuf::uint32 Audience_PB::gender_id() const {
  return gender_id_;
}
inline void Audience_PB::set_gender_id(::google::protobuf::uint32 value) {
  set_has_gender_id();
  gender_id_ = value;
}

// required uint32 ethnicity_i = 8;
inline bool Audience_PB::has_ethnicity_i() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Audience_PB::set_has_ethnicity_i() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Audience_PB::clear_has_ethnicity_i() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Audience_PB::clear_ethnicity_i() {
  ethnicity_i_ = 0u;
  clear_has_ethnicity_i();
}
inline ::google::protobuf::uint32 Audience_PB::ethnicity_i() const {
  return ethnicity_i_;
}
inline void Audience_PB::set_ethnicity_i(::google::protobuf::uint32 value) {
  set_has_ethnicity_i();
  ethnicity_i_ = value;
}

// required uint32 income_id = 9;
inline bool Audience_PB::has_income_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Audience_PB::set_has_income_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Audience_PB::clear_has_income_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Audience_PB::clear_income_id() {
  income_id_ = 0u;
  clear_has_income_id();
}
inline ::google::protobuf::uint32 Audience_PB::income_id() const {
  return income_id_;
}
inline void Audience_PB::set_income_id(::google::protobuf::uint32 value) {
  set_has_income_id();
  income_id_ = value;
}

// required uint32 age_id = 10;
inline bool Audience_PB::has_age_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Audience_PB::set_has_age_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Audience_PB::clear_has_age_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Audience_PB::clear_age_id() {
  age_id_ = 0u;
  clear_has_age_id();
}
inline ::google::protobuf::uint32 Audience_PB::age_id() const {
  return age_id_;
}
inline void Audience_PB::set_age_id(::google::protobuf::uint32 value) {
  set_has_age_id();
  age_id_ = value;
}

// required uint32 duplicate = 11;
inline bool Audience_PB::has_duplicate() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Audience_PB::set_has_duplicate() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Audience_PB::clear_has_duplicate() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Audience_PB::clear_duplicate() {
  duplicate_ = 0u;
  clear_has_duplicate();
}
inline ::google::protobuf::uint32 Audience_PB::duplicate() const {
  return duplicate_;
}
inline void Audience_PB::set_duplicate(::google::protobuf::uint32 value) {
  set_has_duplicate();
  duplicate_ = value;
}

// -------------------------------------------------------------------

// BrowserOS_PB

// required uint32 date = 1;
inline bool BrowserOS_PB::has_date() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BrowserOS_PB::set_has_date() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BrowserOS_PB::clear_has_date() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BrowserOS_PB::clear_date() {
  date_ = 0u;
  clear_has_date();
}
inline ::google::protobuf::uint32 BrowserOS_PB::date() const {
  return date_;
}
inline void BrowserOS_PB::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
}

// required uint32 account_id = 2;
inline bool BrowserOS_PB::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BrowserOS_PB::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BrowserOS_PB::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BrowserOS_PB::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 BrowserOS_PB::account_id() const {
  return account_id_;
}
inline void BrowserOS_PB::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// required uint32 site_id = 3;
inline bool BrowserOS_PB::has_site_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BrowserOS_PB::set_has_site_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BrowserOS_PB::clear_has_site_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BrowserOS_PB::clear_site_id() {
  site_id_ = 0u;
  clear_has_site_id();
}
inline ::google::protobuf::uint32 BrowserOS_PB::site_id() const {
  return site_id_;
}
inline void BrowserOS_PB::set_site_id(::google::protobuf::uint32 value) {
  set_has_site_id();
  site_id_ = value;
}

// required uint32 size_id = 4;
inline bool BrowserOS_PB::has_size_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BrowserOS_PB::set_has_size_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BrowserOS_PB::clear_has_size_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BrowserOS_PB::clear_size_id() {
  size_id_ = 0u;
  clear_has_size_id();
}
inline ::google::protobuf::uint32 BrowserOS_PB::size_id() const {
  return size_id_;
}
inline void BrowserOS_PB::set_size_id(::google::protobuf::uint32 value) {
  set_has_size_id();
  size_id_ = value;
}

// required uint32 ad_id = 5;
inline bool BrowserOS_PB::has_ad_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BrowserOS_PB::set_has_ad_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BrowserOS_PB::clear_has_ad_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BrowserOS_PB::clear_ad_id() {
  ad_id_ = 0u;
  clear_has_ad_id();
}
inline ::google::protobuf::uint32 BrowserOS_PB::ad_id() const {
  return ad_id_;
}
inline void BrowserOS_PB::set_ad_id(::google::protobuf::uint32 value) {
  set_has_ad_id();
  ad_id_ = value;
}

// required uint32 creative_id = 6;
inline bool BrowserOS_PB::has_creative_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BrowserOS_PB::set_has_creative_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BrowserOS_PB::clear_has_creative_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BrowserOS_PB::clear_creative_id() {
  creative_id_ = 0u;
  clear_has_creative_id();
}
inline ::google::protobuf::uint32 BrowserOS_PB::creative_id() const {
  return creative_id_;
}
inline void BrowserOS_PB::set_creative_id(::google::protobuf::uint32 value) {
  set_has_creative_id();
  creative_id_ = value;
}

// required uint32 campaign_id = 7;
inline bool BrowserOS_PB::has_campaign_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BrowserOS_PB::set_has_campaign_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BrowserOS_PB::clear_has_campaign_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BrowserOS_PB::clear_campaign_id() {
  campaign_id_ = 0u;
  clear_has_campaign_id();
}
inline ::google::protobuf::uint32 BrowserOS_PB::campaign_id() const {
  return campaign_id_;
}
inline void BrowserOS_PB::set_campaign_id(::google::protobuf::uint32 value) {
  set_has_campaign_id();
  campaign_id_ = value;
}

// required uint32 browser = 8;
inline bool BrowserOS_PB::has_browser() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BrowserOS_PB::set_has_browser() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BrowserOS_PB::clear_has_browser() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BrowserOS_PB::clear_browser() {
  browser_ = 0u;
  clear_has_browser();
}
inline ::google::protobuf::uint32 BrowserOS_PB::browser() const {
  return browser_;
}
inline void BrowserOS_PB::set_browser(::google::protobuf::uint32 value) {
  set_has_browser();
  browser_ = value;
}

// required uint32 osystem = 9;
inline bool BrowserOS_PB::has_osystem() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BrowserOS_PB::set_has_osystem() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BrowserOS_PB::clear_has_osystem() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BrowserOS_PB::clear_osystem() {
  osystem_ = 0u;
  clear_has_osystem();
}
inline ::google::protobuf::uint32 BrowserOS_PB::osystem() const {
  return osystem_;
}
inline void BrowserOS_PB::set_osystem(::google::protobuf::uint32 value) {
  set_has_osystem();
  osystem_ = value;
}

// -------------------------------------------------------------------

// AggregatorReports_PB

// required uint32 account_id = 100;
inline bool AggregatorReports_PB::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AggregatorReports_PB::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AggregatorReports_PB::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AggregatorReports_PB::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 AggregatorReports_PB::account_id() const {
  return account_id_;
}
inline void AggregatorReports_PB::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// required .rubicon.data_pipeline.aggregation_framework.AggregatorReports_PB.AggregatorReportsCode_E report_type = 1 [default = UNSET];
inline bool AggregatorReports_PB::has_report_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AggregatorReports_PB::set_has_report_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AggregatorReports_PB::clear_has_report_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AggregatorReports_PB::clear_report_type() {
  report_type_ = 0;
  clear_has_report_type();
}
inline ::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E AggregatorReports_PB::report_type() const {
  return static_cast< ::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E >(report_type_);
}
inline void AggregatorReports_PB::set_report_type(::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E value) {
  GOOGLE_DCHECK(::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E_IsValid(value));
  set_has_report_type();
  report_type_ = value;
}

// optional .rubicon.data_pipeline.aggregation_framework.Audience_PB audience = 2;
inline bool AggregatorReports_PB::has_audience() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AggregatorReports_PB::set_has_audience() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AggregatorReports_PB::clear_has_audience() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AggregatorReports_PB::clear_audience() {
  if (audience_ != NULL) audience_->::rubicon::data_pipeline::aggregation_framework::Audience_PB::Clear();
  clear_has_audience();
}
inline const ::rubicon::data_pipeline::aggregation_framework::Audience_PB& AggregatorReports_PB::audience() const {
  return audience_ != NULL ? *audience_ : *default_instance_->audience_;
}
inline ::rubicon::data_pipeline::aggregation_framework::Audience_PB* AggregatorReports_PB::mutable_audience() {
  set_has_audience();
  if (audience_ == NULL) audience_ = new ::rubicon::data_pipeline::aggregation_framework::Audience_PB;
  return audience_;
}
inline ::rubicon::data_pipeline::aggregation_framework::Audience_PB* AggregatorReports_PB::release_audience() {
  clear_has_audience();
  ::rubicon::data_pipeline::aggregation_framework::Audience_PB* temp = audience_;
  audience_ = NULL;
  return temp;
}

// optional .rubicon.data_pipeline.aggregation_framework.BrowserOS_PB browser_os = 3;
inline bool AggregatorReports_PB::has_browser_os() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AggregatorReports_PB::set_has_browser_os() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AggregatorReports_PB::clear_has_browser_os() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AggregatorReports_PB::clear_browser_os() {
  if (browser_os_ != NULL) browser_os_->::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB::Clear();
  clear_has_browser_os();
}
inline const ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB& AggregatorReports_PB::browser_os() const {
  return browser_os_ != NULL ? *browser_os_ : *default_instance_->browser_os_;
}
inline ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB* AggregatorReports_PB::mutable_browser_os() {
  set_has_browser_os();
  if (browser_os_ == NULL) browser_os_ = new ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB;
  return browser_os_;
}
inline ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB* AggregatorReports_PB::release_browser_os() {
  clear_has_browser_os();
  ::rubicon::data_pipeline::aggregation_framework::BrowserOS_PB* temp = browser_os_;
  browser_os_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ReportsValue_PB

// optional uint32 rubicon_imps = 1 [default = 0];
inline bool ReportsValue_PB::has_rubicon_imps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportsValue_PB::set_has_rubicon_imps() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportsValue_PB::clear_has_rubicon_imps() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportsValue_PB::clear_rubicon_imps() {
  rubicon_imps_ = 0u;
  clear_has_rubicon_imps();
}
inline ::google::protobuf::uint32 ReportsValue_PB::rubicon_imps() const {
  return rubicon_imps_;
}
inline void ReportsValue_PB::set_rubicon_imps(::google::protobuf::uint32 value) {
  set_has_rubicon_imps();
  rubicon_imps_ = value;
}

// optional uint32 defaults_in = 2 [default = 0];
inline bool ReportsValue_PB::has_defaults_in() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportsValue_PB::set_has_defaults_in() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportsValue_PB::clear_has_defaults_in() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportsValue_PB::clear_defaults_in() {
  defaults_in_ = 0u;
  clear_has_defaults_in();
}
inline ::google::protobuf::uint32 ReportsValue_PB::defaults_in() const {
  return defaults_in_;
}
inline void ReportsValue_PB::set_defaults_in(::google::protobuf::uint32 value) {
  set_has_defaults_in();
  defaults_in_ = value;
}

// optional uint32 defaults_out = 3 [default = 0];
inline bool ReportsValue_PB::has_defaults_out() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReportsValue_PB::set_has_defaults_out() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReportsValue_PB::clear_has_defaults_out() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReportsValue_PB::clear_defaults_out() {
  defaults_out_ = 0u;
  clear_has_defaults_out();
}
inline ::google::protobuf::uint32 ReportsValue_PB::defaults_out() const {
  return defaults_out_;
}
inline void ReportsValue_PB::set_defaults_out(::google::protobuf::uint32 value) {
  set_has_defaults_out();
  defaults_out_ = value;
}

// optional uint32 rubicon_clicks = 4 [default = 0];
inline bool ReportsValue_PB::has_rubicon_clicks() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReportsValue_PB::set_has_rubicon_clicks() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReportsValue_PB::clear_has_rubicon_clicks() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReportsValue_PB::clear_rubicon_clicks() {
  rubicon_clicks_ = 0u;
  clear_has_rubicon_clicks();
}
inline ::google::protobuf::uint32 ReportsValue_PB::rubicon_clicks() const {
  return rubicon_clicks_;
}
inline void ReportsValue_PB::set_rubicon_clicks(::google::protobuf::uint32 value) {
  set_has_rubicon_clicks();
  rubicon_clicks_ = value;
}

// optional uint32 rubicon_actions = 5 [default = 0];
inline bool ReportsValue_PB::has_rubicon_actions() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReportsValue_PB::set_has_rubicon_actions() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReportsValue_PB::clear_has_rubicon_actions() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReportsValue_PB::clear_rubicon_actions() {
  rubicon_actions_ = 0u;
  clear_has_rubicon_actions();
}
inline ::google::protobuf::uint32 ReportsValue_PB::rubicon_actions() const {
  return rubicon_actions_;
}
inline void ReportsValue_PB::set_rubicon_actions(::google::protobuf::uint32 value) {
  set_has_rubicon_actions();
  rubicon_actions_ = value;
}

// optional double network_revenue = 6 [default = 0];
inline bool ReportsValue_PB::has_network_revenue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReportsValue_PB::set_has_network_revenue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReportsValue_PB::clear_has_network_revenue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReportsValue_PB::clear_network_revenue() {
  network_revenue_ = 0;
  clear_has_network_revenue();
}
inline double ReportsValue_PB::network_revenue() const {
  return network_revenue_;
}
inline void ReportsValue_PB::set_network_revenue(double value) {
  set_has_network_revenue();
  network_revenue_ = value;
}

// optional uint32 network_clicks = 7 [default = 0];
inline bool ReportsValue_PB::has_network_clicks() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReportsValue_PB::set_has_network_clicks() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReportsValue_PB::clear_has_network_clicks() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReportsValue_PB::clear_network_clicks() {
  network_clicks_ = 0u;
  clear_has_network_clicks();
}
inline ::google::protobuf::uint32 ReportsValue_PB::network_clicks() const {
  return network_clicks_;
}
inline void ReportsValue_PB::set_network_clicks(::google::protobuf::uint32 value) {
  set_has_network_clicks();
  network_clicks_ = value;
}

// optional uint32 network_imps = 8 [default = 0];
inline bool ReportsValue_PB::has_network_imps() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReportsValue_PB::set_has_network_imps() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReportsValue_PB::clear_has_network_imps() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReportsValue_PB::clear_network_imps() {
  network_imps_ = 0u;
  clear_has_network_imps();
}
inline ::google::protobuf::uint32 ReportsValue_PB::network_imps() const {
  return network_imps_;
}
inline void ReportsValue_PB::set_network_imps(::google::protobuf::uint32 value) {
  set_has_network_imps();
  network_imps_ = value;
}

// optional double tech_fee = 9 [default = 0];
inline bool ReportsValue_PB::has_tech_fee() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReportsValue_PB::set_has_tech_fee() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReportsValue_PB::clear_has_tech_fee() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReportsValue_PB::clear_tech_fee() {
  tech_fee_ = 0;
  clear_has_tech_fee();
}
inline double ReportsValue_PB::tech_fee() const {
  return tech_fee_;
}
inline void ReportsValue_PB::set_tech_fee(double value) {
  set_has_tech_fee();
  tech_fee_ = value;
}

// optional uint64 score = 10 [default = 0];
inline bool ReportsValue_PB::has_score() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReportsValue_PB::set_has_score() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReportsValue_PB::clear_has_score() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReportsValue_PB::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 ReportsValue_PB::score() const {
  return score_;
}
inline void ReportsValue_PB::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
}

// optional int64 weight = 11 [default = 0];
inline bool ReportsValue_PB::has_weight() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReportsValue_PB::set_has_weight() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReportsValue_PB::clear_has_weight() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReportsValue_PB::clear_weight() {
  weight_ = GOOGLE_LONGLONG(0);
  clear_has_weight();
}
inline ::google::protobuf::int64 ReportsValue_PB::weight() const {
  return weight_;
}
inline void ReportsValue_PB::set_weight(::google::protobuf::int64 value) {
  set_has_weight();
  weight_ = value;
}

// optional int32 value = 12 [default = 0];
inline bool ReportsValue_PB::has_value() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ReportsValue_PB::set_has_value() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ReportsValue_PB::clear_has_value() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ReportsValue_PB::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 ReportsValue_PB::value() const {
  return value_;
}
inline void ReportsValue_PB::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// optional float weighted_score = 13 [default = 0];
inline bool ReportsValue_PB::has_weighted_score() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ReportsValue_PB::set_has_weighted_score() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ReportsValue_PB::clear_has_weighted_score() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ReportsValue_PB::clear_weighted_score() {
  weighted_score_ = 0;
  clear_has_weighted_score();
}
inline float ReportsValue_PB::weighted_score() const {
  return weighted_score_;
}
inline void ReportsValue_PB::set_weighted_score(float value) {
  set_has_weighted_score();
  weighted_score_ = value;
}

// optional uint32 finalized_date = 14;
inline bool ReportsValue_PB::has_finalized_date() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ReportsValue_PB::set_has_finalized_date() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ReportsValue_PB::clear_has_finalized_date() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ReportsValue_PB::clear_finalized_date() {
  finalized_date_ = 0u;
  clear_has_finalized_date();
}
inline ::google::protobuf::uint32 ReportsValue_PB::finalized_date() const {
  return finalized_date_;
}
inline void ReportsValue_PB::set_finalized_date(::google::protobuf::uint32 value) {
  set_has_finalized_date();
  finalized_date_ = value;
}

// -------------------------------------------------------------------

// SimpleMessage_PB

// required uint64 emit_time = 1;
inline bool SimpleMessage_PB::has_emit_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SimpleMessage_PB::set_has_emit_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SimpleMessage_PB::clear_has_emit_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SimpleMessage_PB::clear_emit_time() {
  emit_time_ = GOOGLE_ULONGLONG(0);
  clear_has_emit_time();
}
inline ::google::protobuf::uint64 SimpleMessage_PB::emit_time() const {
  return emit_time_;
}
inline void SimpleMessage_PB::set_emit_time(::google::protobuf::uint64 value) {
  set_has_emit_time();
  emit_time_ = value;
}

// required double tech_fee = 2;
inline bool SimpleMessage_PB::has_tech_fee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SimpleMessage_PB::set_has_tech_fee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SimpleMessage_PB::clear_has_tech_fee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SimpleMessage_PB::clear_tech_fee() {
  tech_fee_ = 0;
  clear_has_tech_fee();
}
inline double SimpleMessage_PB::tech_fee() const {
  return tech_fee_;
}
inline void SimpleMessage_PB::set_tech_fee(double value) {
  set_has_tech_fee();
  tech_fee_ = value;
}

// optional double network_revenue = 3;
inline bool SimpleMessage_PB::has_network_revenue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SimpleMessage_PB::set_has_network_revenue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SimpleMessage_PB::clear_has_network_revenue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SimpleMessage_PB::clear_network_revenue() {
  network_revenue_ = 0;
  clear_has_network_revenue();
}
inline double SimpleMessage_PB::network_revenue() const {
  return network_revenue_;
}
inline void SimpleMessage_PB::set_network_revenue(double value) {
  set_has_network_revenue();
  network_revenue_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace aggregation_framework
}  // namespace data_pipeline
}  // namespace rubicon

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E>() {
  return ::rubicon::data_pipeline::aggregation_framework::AggregatorReports_PB_AggregatorReportsCode_E_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2dpb_2ddefinition_2eproto__INCLUDED
