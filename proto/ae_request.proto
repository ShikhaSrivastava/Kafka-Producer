//
// The data structures used in AdEngine to deal with a request
//

option optimize_for = SPEED;

package rubicon.data.ad_engine;

import "types.proto";
import "ip.proto";
import "geo.proto";
import "ae_cookies.proto";
import "ae_types.proto";
import "ae_inventory.proto";
import "ae_publisher_user.proto";

//
// context of default killer message
//
message DefaultKillerContext_PB {
    optional string     defaulting_ad_token     = 1;
    optional string     eligibale_zones         = 2;
    optional uint32     rdk_size_count          = 3;
}

//
// ad engione http request info
// 
message RequestInfo_PB {
    optional rubicon.data.common.IPAddress_PB   sender_addr                 = 1;
    optional string                             signature                   = 2;
    optional string                             uri                         = 3;
    optional string                             args                        = 4;
    optional uint32                             browser_code                = 5;
    optional uint32                             os_code                     = 6;
    optional string                             accept_language             = 7;
    optional string                             encoding                    = 8;
    repeated Cookie_PB                          input_cookies               = 9;                        // all input cookies
    repeated string                             input_headers               = 10;
    optional bool                               first_time                  = 11 [default = false];     // whether it is the first time we see a user
    optional string                             org_refering_domain         = 12;                       // this is the original referer in http header, or empty if identical to refering_domain
    optional string                             refering_domain             = 13;                       // either original referer from http headers, or value for "rf" in the url 
    optional bool                               refering_domain_is_valid    = 14 [default = false];     // whether referer is a valif url
    optional string                             refering_host_info          = 15;                       // hostinfo part of referrer
    optional string                             refering_path               = 16;                       // path in the referer  
    optional uint64                             browser_time_stamp_msec     = 17;                       // browser time stamp in msec
    optional bool                               trp_opt_out                 = 18 [default = false];     // whether trp_optout=true cookie is present in the request    
    optional bool                               market_api                  = 19 [default = false];     // whether or not the request is a market_api impression request
}

//
// click ad
//
message ClickAd_PB {
    optional ClickAdType_E      type    = 1 [default = UNSET_CLICK_TYPE];
    optional int64              ad_id   = 2;     
}

//
// request extra info
//
message RequestExtra_PB {    
    optional ClickAd_PB         click_ad            = 1;
    optional string             redirect_url        = 2;
    optional string             image_ad_identifier = 3;  
}

//
// ad engine http request
// 
message Request_PB {

    // the entries in this enum should be power of 2 
    // so they can be used for bitwise operations. 
    enum StatusCode_E {
        SC_VALID                           = 0;
        SC_INVALID_INVENTORY_INFO          = 1;
        SC_USERNAME_MD5_MISMATCH           = 2;
    }
   
    required uint64                             time_stamp_msec         = 1;    // timestamp in msec from epoch
    required string                             impression_uuid         = 2;    // universally unique id
    optional RequestInfo_PB                     request_info            = 3;
    optional RequestType_E                      request_type            = 4 [default = UNKNOWN_REQUEST];
    optional rubicon.data.common.MimeType_E     mime                    = 5 [default = UNKNOWN_MIME];
    optional bool                               default_killer          = 6 [default = false];
    optional DefaultKillerContext_PB            default_killer_context  = 7;
    optional Inventory_PB                       inventory               = 8;
    optional rubicon.data.geo.Geo_PB            geo                     = 9; 
    optional RequestExtra_PB                    extra                   = 10;
    optional PublisherUser_PB                   publisher_user          = 11;
    optional RuidCookie_PB                      user_session            = 12;   // this is identical to: either what 
                                                                                // we read from ruid cookie, or what we set
                                                                                // in ruid cookie in the response
    required uint64                             status_code             = 20;   // this is used for bitwise operations
}

