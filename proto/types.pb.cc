// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rubicon {
namespace data {
namespace common {

namespace {

const ::google::protobuf::EnumDescriptor* MimeType_E_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AdClassType_E_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PMPClassType_E_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PrivateTierType_E_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* BERequestResponseType_E_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_types_2eproto() {
  protobuf_AddDesc_types_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "types.proto");
  GOOGLE_CHECK(file != NULL);
  MimeType_E_descriptor_ = file->enum_type(0);
  AdClassType_E_descriptor_ = file->enum_type(1);
  PMPClassType_E_descriptor_ = file->enum_type(2);
  PrivateTierType_E_descriptor_ = file->enum_type(3);
  BERequestResponseType_E_descriptor_ = file->enum_type(4);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_types_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_types_2eproto() {
}

void protobuf_AddDesc_types_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013types.proto\022\023rubicon.data.common*k\n\nMi"
    "meType_E\022\020\n\014UNKNOWN_MIME\020\000\022\013\n\007JS_MIME\020\001\022"
    "\r\n\tHTML_MIME\020\002\022\016\n\nIMAGE_MIME\020\003\022\021\n\rREDIRE"
    "CT_MIME\020\004\022\014\n\010PSA_MIME\020\005*\241\001\n\rAdClassType_"
    "E\022\024\n\020UNKNOWN_AD_CLASS\020\000\022\024\n\020PARTNER_AD_CL"
    "ASS\020\001\022\023\n\017DIRECT_AD_CLASS\020\002\022\020\n\014RTB_AD_CLA"
    "SS\020\003\022\027\n\023STATIC_BID_AD_CLASS\020\004\022\020\n\014PSA_AD_"
    "CLASS\020\005\022\022\n\016HOUSE_AD_CLASS\020\006*\212\001\n\016PMPClass"
    "Type_E\022\031\n\025UNSPECIFIED_PMP_CLASS\020\000\022\026\n\022STA"
    "NDARD_PMP_CLASS\020\001\022\026\n\022OVERRIDE_PMP_CLASS\020"
    "\002\022\026\n\022PRIORITY_PMP_CLASS\020\003\022\025\n\021PRIVATE_PMP"
    "_CLASS\020\004*\202\001\n\021PrivateTierType_E\022\020\n\014UNKNOW"
    "N_TIER\020\000\022\021\n\rSTANDARD_TIER\020\001\022\027\n\023FLOOR_OVE"
    "RRIDE_TIER\020\002\022\035\n\031PRIORITY_FIRST_RIGHT_TIE"
    "R\020\003\022\020\n\014PRIVATE_TIER\020\004*A\n\027BERequestRespon"
    "seType_E\022\020\n\014JSON_BE_TYPE\020\000\022\024\n\020PROTOBUF_B"
    "E_TYPE\020\001B\002H\001", 652);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "types.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_types_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_types_2eproto {
  StaticDescriptorInitializer_types_2eproto() {
    protobuf_AddDesc_types_2eproto();
  }
} static_descriptor_initializer_types_2eproto_;

const ::google::protobuf::EnumDescriptor* MimeType_E_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MimeType_E_descriptor_;
}
bool MimeType_E_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AdClassType_E_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdClassType_E_descriptor_;
}
bool AdClassType_E_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PMPClassType_E_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PMPClassType_E_descriptor_;
}
bool PMPClassType_E_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PrivateTierType_E_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrivateTierType_E_descriptor_;
}
bool PrivateTierType_E_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BERequestResponseType_E_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BERequestResponseType_E_descriptor_;
}
bool BERequestResponseType_E_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace data
}  // namespace rubicon

// @@protoc_insertion_point(global_scope)
