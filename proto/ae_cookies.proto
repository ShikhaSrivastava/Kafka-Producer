//
// structure of different cookies that are being used in AE
// 

option optimize_for = SPEED;

package rubicon.data.ad_engine;

//
// general input/output cookie structure
//
message Cookie_PB {

    enum CookieType_E {
        UNKNOWN_COOKIE  = 0;
        RUID_COOKIE     = 1;    // user 
        RSID_COOKIE     = 2;    // session
        CSI_COOKIE      = 3;    // impression cap
        CSC_COOKIE      = 4;    // click cap
        RDK_COOKIE      = 5;    // dk
        SES_COOKIE      = 6;    // session start
        RPB_COOKIE      = 7;    // behavior
        PUT_COOKIE      = 8;    // put
        NUS_COOKIE      = 9;    // nus
        CIMG_COOKIE     = 10;   // cimg 
    }       

    enum CookieStatus_E {
        VALID_COOKIE    = 0;
        EXPIRED_COOKIE  = 1;
        CORRUPT_COOKIE  = 2;
    }

    optional CookieType_E       type    = 1 [default = UNKNOWN_COOKIE];
    optional CookieStatus_E     status  = 2 [default = VALID_COOKIE];

    optional string             raw     = 3;    // raw cookie 
    optional string             name    = 4;    // cookie's name
    optional string             value   = 5;    // cookie's value
    optional string             domain  = 6;    // cookie's domain
    optional string             path    = 7;    // cookie's path
    optional string             expires = 8;    // cookie's expiration
    optional int64              max_age = 9;    // cookie's max age
}

//
// ruid cookie
//
message RuidCookie_PB {
    optional string     user_id     = 1;
    optional uint64     session_id  = 2;
}

//
// rsid
//
message RsidCookie_PB {
    optional string     session = 1;
}

//
// rdk_size_id 
//
message RdkCookie_PB {
    optional string     value   = 2;
}

//
// csi, csi_size_id, csc cookies
// this holds the same info as (cad, ctotal, cstart, clast, csize and 
// ccd, cctotal, cctart, ccast) in the legacy code
//
message CsiCscCookie_PB {
    optional string     ad      = 1;
    optional uint64     total   = 2;
    optional uint64     first   = 3;
    optional uint64     last    = 4;
    optional uint64     size    = 5;
    optional bool       valid   = 10 [default = true];   
}

//
// cimg cookie
// this holds the same info as IMG data structure in the legacy code
//
message CimgCookie_PB {
    optional uint64     stamp       = 1;
    optional uint32     account_id  = 2;
    optional uint32     site_id     = 3;
    optional uint32     zone_id     = 4;
    optional uint32     size_id     = 5;
    optional uint32     ad_id       = 6;
    optional uint32     creative_id = 7;
}

//
// put, nus cookies
//
message PutNusCookie_PB {
    optional string     cookie_name = 1;
    optional string     value       = 2;
}

//
// session cookie
//
message SesCookie_PB {
    optional uint32     site_id = 1;
    optional uint64     count   = 2;
}

//
// rpb (behavior cookie)
//
message RpbCookie_PB {
    optional uint32     id      = 1;    
    optional string     value   = 2;
    optional string     name    = 3;        // name = "rpb_" + id
}

//
// all input cookies read by AdEngine
//
message InputCookies_PB {
    repeated CimgCookie_PB          cimg        = 1;            // cimg, with or without size_id
    repeated CsiCscCookie_PB        csi_size_id = 2;            // csi with size id
    repeated CsiCscCookie_PB        csi_xxx     = 3;            // all csi_xxx cookies
    repeated CsiCscCookie_PB        csc         = 4;            // csc
    repeated PutNusCookie_PB        put_xxx     = 5;            // all put_xxx cookies
    repeated PutNusCookie_PB        nus_xxx     = 6;            // all nus_xxx cookies
    optional RdkCookie_PB           rdk_size_id = 7;            // rdk with size_id
    repeated RdkCookie_PB           rdk_xxx     = 8;            // all rdk_xxx cookies            
    optional RsidCookie_PB          rsid        = 9;            // rsid
    optional RuidCookie_PB          ruid        = 10;           // ruid
    repeated SesCookie_PB           ses_size_id = 11;           // ses with size_id
    repeated RpbCookie_PB           rpb         = 12;           // rpb 
}
